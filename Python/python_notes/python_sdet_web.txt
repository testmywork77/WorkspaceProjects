CSS Selector with Id:
tagname#ID

CSS Selector:
tagname[attribute='value']
$("tagname[attribute='value']")

xPath:
//tagname[@attribute=value]
$x("//input[@type='submit']")

CSS Selector with RegExp *= , means Substring
div[class*='alert-success']

xPath with RegExp *= , means Substring
//div[contains(@class, 'alert-success')]
//*[contains(@class, 'alert-success')]


Selectors:
	Id
	Name
	ClassName

	xPath
	CSS Selector

	LinkText

	tagname#id -tagname is Optional
	input#username

CSS Selector for Id & ClassName:
	For Id:
		tagname#id -tagname is Optional
		input#username

	For ClassName:
		tagname.classname -tagname is Optional
		input.password

xPath (Only valid for xPath):
	//tagname[text()='']
	//a[text()='Cancel']
	
div  (Immediate Parent) <--- label (Child)
	Parent to Child by xPath:
		//div[@id='usernamegroup']/label

	Parent to Child by CSS Selector:
		div[id='usernamegroup'] label
		div#usernamegroup label
	
XPath adn CSS by Traversing Tag:
	xPath: ParentTag/ChildTag
	CSS Selector: ParentTag ChildTag
	//form[@name='login']/div[1]/label

Static Dropdowns:
	<select id="drpGender">
	 <option value=0>Select Gender</option>
	 <option value=1>Male</option>
	 <option value=2>Female</option>
	</select>

	Select class provides the methods to handle dropdowns.
	Selenium.webdriver.support.select.Select

	genderDropdown = Select(driver.find_element_by_id("drpGender"))
	genderDropdown.select_by_visible_text("Male")
	genderDropdown.select_by_index(1)

Auto Suggestive Dropdown:


Dropdown Types:
	Static Dropdowns
	Auto Suggestive Dropdown

#login_form label[for='password']
#login_form label:nth-child(4)

Relative XPath vs Absolute XPath:
	Absolute XPath, generated by traversing tags from root/parent of "html" element.
	Relative XPath, directly target the "finding element" instead of traverse from "root element"



Section 10 done
Section 11 - In Progress i.e. 41