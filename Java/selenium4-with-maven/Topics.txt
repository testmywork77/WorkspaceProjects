Sample WebSites:
    https://demo.nopcommerce.com/
    https://admin-demo.nopcommerce.com/  [Admin email: admin@yourstore.com, Admin password: admin ]

Selenium 4:
 1. Introduction, Installation and Execution of Sample Automation Script
 2. Relative Locators
 3. Implicit Wait, WebDriverWait and Fluent Wait changes (Duration.ofSeconds(x))
 4. Creating New Window or Tab and then switching to them
 5. ChromeDriver and EdgeDriver classes now extend ChromiumDriver, previously extend from RemoteWebDriver. Now,
    ChromiumDriver extends from RemoteWebDriver. But FirefoxDriver directly extends from RemoteWebDriver only.
 6. Minimize Browser Window using minimize()
 7. getRect() for getting both location and size
        getRect() = getLocation() + getSize() //Selenium<4
        In Selenium 4, getRect(), getLocation() and getSize() commands
        r = element.getRect()
        r.getX()
        r.getY()
        r.getWidth()
        r.getHeight()
 8. Taking screenshot of a Web Element using getScreenshotAs()
 9. Taking screenshot of a Page Section using getScreenshotAs()
 10. Taking screenshot of the full page using getFullPageScreenshotAs()
 11. BiDi APIs (WebDriver BiDirectional Protocol) - Current Status
 12. Selenium 4 - Chrome DevTools Protocol (CDP)
 13. Browser level Authentication Using BiDi APIs
 ( BiDirectional functionality: https://www.selenium.dev/documentation/webdriver/bidirectional/
  BiDirectional API: https://www.selenium.dev/documentation/webdriver/bidirectional/bidi_api/ )
 14.



Notes:
Selenium 4 -BiDi APIs (WebDriver BiDirectional Protocol)
    Selenium 4 is now using W3C WebDriver Protocol, and is moving in the direction of next generation protocol i.e. WebDriver BiDirectional Protocol.
    With this protocol, we can achieve automating browser level things 1.Getting Browser logs, 2. Browser Level Authentication 3. Changing Geo-location

    To achieve above, Use external protocol i.e. Chrome DevTools Protocol(Only Chrome, Firefox and Edge are supporting now)

Selenium 4 - Chrome DevTools Protocol (CDP)
    DevTools in Chrome Browser internally uses Chrome DevTools protocol
    Selenium 4 API supports Chrome DevTools Protocol to automate Browser level operations like: Getting Browser Logs, Browser Level Authentication, Modify Geo Location
    In Selenium 4 API, have below commands in ChromiumDriver class
     1. executeCdpCommand() - For executing a Chrome DevTools protocol command
     2. getDevTools() - Will return the DevTools of the browser
     3. DevTools has the methods for handling DevTools options

    ChromeDriver and EdgeDriver classes are inheriting the ChromiumDriver class in Selenium 4.







 For File Operations:
 <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
 <dependency>
     <groupId>commons-io</groupId>
     <artifactId>commons-io</artifactId>
     <version>2.11.0</version>
 </dependency>
Note: The Apache Commons IO library contains utility classes, stream implementations,
file filters, file comparators, endian transformation classes, and much more.







